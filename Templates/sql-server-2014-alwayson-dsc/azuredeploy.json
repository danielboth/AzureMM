{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Name of storage account"
      }
    },

    "vmNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Naming prefix for each VM name. 8-char max, lowercase alpha"
      }
    },

    "sqlVMSize": {
      "type": "string",
      "allowedValues": [
        "Standard_D1",
        "Standard_DS1",
        "Standard_D2",
        "Standard_DS2",
        "Standard_D3",
        "Standard_DS3",
        "Standard_D4",
        "Standard_DS4",
        "Standard_D11",
        "Standard_DS11",
        "Standard_D12",
        "Standard_DS12",
        "Standard_D13",
        "Standard_DS13",
        "Standard_D14",
        "Standard_DS14"
      ],
      "metadata": {
        "description": "Size of the SQL VMs to be created"
      },
      "defaultValue": "Standard_DS1"
    },

    "sqlWitnessVMSize": {
      "type": "string",
      "allowedValues": [
        "Standard_D1",
        "Standard_DS1",
        "Standard_D2",
        "Standard_DS2",
        "Standard_D3",
        "Standard_DS3",
        "Standard_D4",
        "Standard_DS4",
        "Standard_D11",
        "Standard_DS11",
        "Standard_D12",
        "Standard_DS12",
        "Standard_D13",
        "Standard_DS13",
        "Standard_D14",
        "Standard_DS14"
      ],
      "metadata": {
        "description": "Size of the Witness VM to be created"
      },
      "defaultValue": "Standard_DS1"
    },

    "dnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "DNS Prefix for the Public IP Address"
      }
    },

    "domainName": {
      "type": "string",
      "metadata": {
        "description": "DNS domain name for the Active Directory domain to be created"
      },
      "defaultValue": "azure.test"
    },

    "sqlServerServiceAccountUserName": {
      "type": "string",
      "metadata": {
        "description": "The SQL Server Service account name"
      }
    },

    "sqlServerServiceAccountPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The SQL Server Service account password"
      }
    },

    "sqlSubnet": {
      "type": "string",
      "metadata": {
        "description": "Name of sql subnet"
      }
    },

    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Domain admin user name"
      }
    },

    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Domain admin password"
      }
    },

    "assetLocation": {
      "type": "string",
      "metadata": {
        "description": "Location of resources that the script is dependent on such as linked templates and DSC modules"
      },
      "defaultValue": "https://raw.githubusercontent.com/danielboth/AzureMM/master/Templates/sql-server-2014-alwayson-dsc"
    },

    "location": {
      "type": "string",
      "allowedValues": [
        "West US",
        "East US",
        "East US 2",
        "Central US",
        "South Central US",
        "North Central US",
        "North Europe",
        "West Europe",
        "East Asia",
        "Southeast Asia",
        "Japan East",
        "Japan West",
        "Brazil South",
        "Australia East",
        "Australia Southeast",
        "Central India",
        "South India",
        "West India"
      ],
      "metadata": {
        "description": "Region in which to deploy the new resources"
      }
    },

    "sqlLBIPAddress": {
      "type": "string",
      "metadata": {
        "description": "IP address of ILB for the new SQL Server AlwaysOn listener to be created"
      }
    },

    "dataBaseNames": {
      "type": "array",
      "metadata": {
        "description": "An array of databases name, each database will be created and added to the availability group"
      },
      "defaultValue": [ "testdb1", "testdb2" ]
    },
    "networkResourceGroup": {
      "type": "string"
    },
    "virtualNetworkName": {
      "type": "string"
    },
    "adPDCVMName": {
      "type": "string"
    }
  },
  "variables": {
    "apiVersion": "2015-01-01",
    "apiVersionNetworks": "2015-06-15",
    "apiVersionVirtualMachines": "2015-06-15",
    "apiVersionVMExtensions": "2015-06-15",
    "apiVersionStorage": "2015-06-15",
    "virtualNetworkName": "parameters('virtualNetworkName')",
    "adPDCVMName": "parameters('adPDCVMName')",
    "VnetID": "[resourceId(parameters('networkResourceGroup'),'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",

    "sqlSubnetName": "parameters(sqlSubnetName)",
    "sqlSubnetRef": "[concat(variables('vnetID'),'/subnets/',variables('sqlSubnetName'))]",
    "sqlStorageName": "(parameters('storageAccountName')",
    "sqlClusterTemplateURL": "[concat(parameters('assetLocation'),'/SqlClusterVmTemplate.json')]",
    "deploySqlClusterVms": "deploySqlClusterVms",
    "deploySqlClusterVmsId": "[concat('Microsoft.Resources/deployments/', variables('deploySqlClusterVms'))]",

    "sqlWitnessTemplateURL": "[concat(parameters('assetLocation'),'/SqlWitnessVmTemplate.json')]",
    "sqlWitnessStorageName": "(parameters('storageAccountName')",
    "deploySqlWitnessVms": "deploySqlWitnessVms",
    "deploySqlWitnessVmsId": "[concat('Microsoft.Resources/deployments/', variables('deploySqlWitnessVms'))]",

    "publicLBName": "sqlLoadBalancer",
    "lbFE": "SqlLBFE",
    "lbBE": "SqlLBBE",
    "sqllbID": "[resourceId('Microsoft.Network/loadBalancers',variables('publicLBName'))]",
    "sqllbFEConfigID": "[concat(variables('sqllbID'),'/frontendIPConfigurations/',variables('lbFE'))]",
    "sqlBEAddressPoolID": "[concat(variables('sqllbID'),'/backendAddressPools/',variables('lbBE'))]",

    "deploySqlWitnessShare": "deploySqlWitnessShare",
    "deploySqlWitnessShareId": "[concat('Microsoft.Resources/deployments/', variables('deploySqlWitnessShare'))]",
    "deploySqlWitnessShareTemplateUrl": "[concat(parameters('assetLocation'),'/DeploySqlWitnessShare.json')]",
    "sqlWitnessSharePath": "[concat(parameters('dnsPrefix'),'-fsw')]",
    "sqlWitnessVmNamePrefix": "[concat(parameters('vmNamePrefix'),'w20p10')]",
    "sqlwVMName": "[concat(variables('sqlWitnessVmNamePrefix'),'0')]",

    "deploySqlAlwaysOn": "deploySqlAlwaysOn",
    "deploySqlAlwaysOnTemplateUrl": "[concat(parameters('assetLocation'),'/DeploySqlAlwaysOn.json')]",

    "sqlClusterVmNamePrefix": "[concat(parameters('vmNamePrefix'),'20p10')]",
    "sqlCVMName1": "[concat(variables('sqlClusterVmNamePrefix'),'0')]",
    "sqlCVMName2": "[concat(variables('sqlClusterVmNamePrefix'),'1')]",

    "sqlLBName": "sqlLoadBalancer",

    "sqlAOEPName": "[concat(parameters('dnsPrefix'),'-hadr')]",
    "sqlAOAGName": "[concat(parameters('dnsPrefix'),'-ag')]",
    "sqlAOListenerName": "[concat(parameters('dnsPrefix'),'ag-listener')]",

    "sqlAvailabilitySetName": "sqlAvailabilitySet"
  },

  "resources": [
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('sqlAvailabilitySetName')]",
      "apiVersion": "[variables('apiVersionNetworks')]",
      "location": "[parameters('location')]"
    },
    {
      "name": "[variables('deploySqlClusterVms')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('apiVersion')]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/availabilitySets', variables('sqlAvailabilitySetName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('sqlClusterTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": { "value": "[parameters('location')]" },
          "adminUsername": { "value": "[parameters('adminUsername')]" },
          "adminPassword": { "value": "[parameters('adminPassword')]" },
          "storageAccount": { "value": "[variables('SqlStorageName')]" },
          "nicSubnetUri": { "value": "[variables('sqlSubnetRef')]" },
          "lbSubnetUri": { "value": "[variables('sqlSubnetRef')]" },
          "vmNamePrefix": { "value": "[variables('sqlClusterVmNamePrefix')]" },
          "sqlLBIPAddress": { "value": "[parameters('sqlLBIPAddress')]" },
          "vmSize": { "value": "[parameters('sqlVMSize')]" },
          "availabilitySetName": { "value": "[variables('sqlAvailabilitySetName')]" }
        }
      }
    },
    {
      "name": "[variables('deploySqlWitnessVms')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('apiVersion')]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/availabilitySets', variables('sqlAvailabilitySetName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('sqlWitnessTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": { "value": "[parameters('location')]" },
          "adminUsername": { "value": "[parameters('adminUsername')]" },
          "adminPassword": { "value": "[parameters('adminPassword')]" },
          "storageAccount": { "value": "[variables('sqlWitnessStorageName')]" },
          "subnetUri": { "value": "[variables('sqlSubnetRef')]" },
          "vmNamePrefix": { "value": "[variables('sqlWitnessVmNamePrefix')]" },
          "vmSize": { "value": "[parameters('sqlWitnessVMSize')]" }
        }
      }
    },

    {
      "name": "[variables('deploySqlWitnessShare')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('apiVersion')]",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', variables('deploySqlWitnessVms'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deploySqlWitnessShareTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "sqlwVMName": { "value": "[variables('sqlwVMName')]" },
          "domainName": { "value": "[parameters('domainName')]" },
          "location": { "value": "[parameters('location')]" },
          "sharePath": { "value": "[concat(parameters('dnsPrefix'),'-fsw')]" },
          "adminUsername": { "value": "[parameters('adminUsername')]" },
          "adminPassword": { "value": "[parameters('adminPassword')]" },
          "assetLocation": { "value": "[parameters('assetLocation')]" }
        }
      }
    },
    {
      "name": "[variables('deploySqlAlwaysOn')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('apiVersion')]",
      "dependsOn": [
        "[variables('deploySqlClusterVmsId')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deploySqlAlwaysOnTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "sqlVMNamePrefix": { "value": "[variables('sqlClusterVmNamePrefix')]" },
          "domainName": { "value": "[parameters('domainName')]" },
          "dnsPrefix": { "value": "[parameters('dnsPrefix')]" },
          "sharePath": { "value": "[variables('sqlWitnessSharePath')]" },
          "sqlwVMName": { "value": "[variables('sqlwVMName')]" },
          "sqlLBName": { "value": "[variables('sqlLBName')]" },
          "sqlLBIPAddress": { "value": "[parameters('sqlLBIPAddress')]" },
          "dnsServerName": { "value": "[variables('adPDCVMName')]" },
          "dataBaseNames": { "value": "[parameters('dataBaseNames')]" },
          "location": { "value": "[parameters('location')]" },
          "sqlServerServiceAccountUserName": { "value": "[parameters('sqlServerServiceAccountUserName')]" },
          "sqlServerServiceAccountPassword": { "value": "[parameters('sqlServerServiceAccountPassword')]" },
          "adminUsername": { "value": "[parameters('adminUsername')]" },
          "adminPassword": { "value": "[parameters('adminPassword')]" },
          "assetLocation": { "value": "[parameters('assetLocation')]" },
          "sqlAlwaysOnEndpointName": { "value": "[variables('sqlAOEPName')]" },
          "sqlAlwaysOnAvailabilityGroupName": { "value": "[variables('sqlAOAGName')]" },
          "sqlAlwaysOnAvailabilityGroupListenerName": { "value": "[variables('sqlAOListenerName')]" }
        }
      }
    }
  ],

  "outputs": {
  }
}
